[build-system]
    build-backend = "poetry.core.masonry.api"
    requires      = ["poetry-core"]

[tool.black]
    line-length    = 76
    target-version = ["py311"]

[tool.coverage.html]
    directory = "htmlcov"

[tool.coverage.paths]
    source = ["*/site-packages", "aoc"]

[tool.coverage.report]
    exclude_lines = [
        "def __repr__",
        "if 0:",
        "if __name__ == __main__:",
        "if self.debug",
        "if settings.DEBUG:",
        "pragma: no cover",
        "raise AssertionError",
        "raise NotImplementedError",
    ]
    fail_under = 60
    show_missing = true

[tool.coverage.run]
    branch         = true
    omit           = ["aoc/__init__.py", "aoc/visualisations/*"]
    relative_files = true
    source         = ["aoc"]

[tool.mypy]
    files                  = ["aoc/"]
    ignore_missing_imports = true
    plugins                = "numpy.typing.mypy_plugin"
    warn_return_any        = true
    warn_unused_configs    = true

[tool.poetry]
    authors = ["Paul Saunders <darac+github@darac.org.uk>"]
    classifiers = [
        "Programming Language :: Python :: 3",
        "Topic :: Games/Entertainment :: Puzzle Games",
    ]
    description = "darac's solutions for http://adventofcode.com"
    name = "aoc"
    readme = "README.md"
    version = "2023.8.4"

    [tool.poetry.dependencies]
        advent-of-code-data = "^2.0.1"
        importlib-metadata  = { version = "^7.1.0", python = "<3.8" }
        kivy                = { version = "^2.3.0", extras = ["base"] }
        more-itertools      = "^10.2.0"
        numpy               = "^1.26.4"
        pandas              = "^2.2.2"
        parse               = "^1.20.1"
        pygame              = "^2.5.2"
        python              = ">=3.9,<3.13"
        rich                = "^13.7.1"

    [tool.poetry.group.dev.dependencies]
        bpython             = "^0.24"
        coverage            = { version = "^7.5.1", extras = ["toml"] }
        mypy                = "^1.10.0"
        poetry              = "^1.8.3"
        pre-commit          = "^3.7.1"
        pytest              = "^8.2.1"
        pytest-cov          = "^5.0.0"
        pytest-gh-log-group = "^0.2.0"
        ruff                = "^0.4.5"
        toml-sort           = "^0.23.1"
        types-pyyaml        = "^6.0.12.20240311"

[tool.poetry.plugins."adventofcode.user"]
    darac_aoc = "aoc:solve"

[tool.pytest.ini_options]
    addopts          = "--cov --cov-report=term --cov-report=xml:coverage.xml --junitxml=junit.xml"
    junit_suite_name = "aoc"

[tool.ruff]
    lint.ignore = [
        "COM812", # Allow ruff formatter
        "ISC001", # Allow ruff formatter
        "N818",   # Don't want to have to call exceptions *Error
        "S101",   # Of course we want to use assert
    ]
    # The AOC website wraps at 76 chars, so should we.
    line-length = 76
    lint.select = [
        "A",
        "ANN",
        "ARG",
        "ASYNC",
        "B",
        "C4",
        "COM",
        "E",
        "EM",
        "EXE",
        "F",
        "FA",
        "FIX",
        "G",
        "I",
        "ICN",
        "INP",
        "ISC",
        "N",
        "NPY",
        "PD",
        "PERF",
        "PIE",
        "PT",
        "PTH",
        "Q",
        "RET",
        "RSE",
        "RUF",
        "S",
        "SIM",
        "SLF",
        "TCH",
        "TD",
        "TID",
        "TRY",
        "UP",
        "W",
        "YTT",
    ]
    target-version = "py311"
