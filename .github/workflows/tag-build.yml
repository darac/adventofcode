---
name: Create a Release
on:
    pull_request:
        types:
            - closed
jobs:
    release:
        if: ${{ github.event.pull_request.merged == true }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup PDM
              uses: pdm-project/setup-pdm@v4
              with:
                  cache: true
                  python-version: "3.12"

            - id: tag_name
              name: Get tag name from PDM
              run: pdm self add pdm-version ; echo "tag=$(pdm version)" >> $GITHUB_OUTPUT

            - name: Create a GitHub release
              env:
                  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
              run: gh release create ${{ steps.tag_name.outputs.tag }} --generate-notes

            - name: Retrieve Generated Changelog
              id: changelog
              env:
                  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
              run: EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64);
                  echo "body<<$EOF" >> $GITHUB_OUTPUT;
                  gh release view "${{ steps.tag_name.outputs.tag }}" --json body -q .body >> $GITHUB_OUTPUT;
                  echo "$EOF" >> $GITHUB_OUTPUT;

            - name: Install `jo`
              run: sudo apt install jo

            - name: Format JSON
              id: formatjson
              run: read -r -d '' CHANGELOG <<'EOF'
                  ${{ steps.changelog.outputs.body }}
                  EOF
                  CHANGELOG=$(echo $CHANGELOG | awk '{printf "%s\\n", $0}')
                  echo "headers=$(jo Content-Type=application/json Authorizaton=Bearer\ ${{ secrets.MASTODON_ACCESS_TOKEN }})" >> $GITHUB_OUTPUT
                  echo "data=$(jo status=\\"Released AdventOfCode [${{ steps.tag_name.outputs.tag }}](https://github.com/darac/adventofcode/releases/tag/${{ steps.tag_name.outputs.tag }})\n$CHANGELOG\n#adventofcode #adventofcode2023" content_type=markdown languange=en)" >> $GITHUB_OUTPUT

            - name: Notify the Fediverse
              uses: fjogeleit/http-request-action@v1
              with:
                  url: https://furry.engineer/api/v1/statuses
                  method: POST
                  customHeaders: ${{ steps.formatjson.outputs.headers }}
                  data: ${{ steps.formatjson.outputs.data }}
