---
name: Create a Release
on:
    pull_request:
        types:
            - closed
jobs:
    release:
        if: ${{ github.event.pull_request.merged == true }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Install poetry
              run: pipx install poetry

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  cache: poetry
                  python-version: "3.11"

            - id: tag_name
              name: Get tag name from poetry
              run: echo "tag=$(poetry version --short)" >> $GITHUB_OUTPUT

            - name: Create a GitHub release
              env:
                  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
              run: gh release create "${{ steps.tag_name.outputs.tag }}" --generate-notes

            - name: Retrieve Generated Changelog
              id: changelog
              env:
                  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
              run: echo "body=$(gh release view "${{ steps.tag_name.outputs.tag }}" --json body -q .body)" >> $GITHUB_OUTPUT

            - name: Notify the Fediverse
              uses: fjogeleit/http-request-action@v1
              with:
                  url: https://furry.engineer/api/v1/statuses
                  method: POST
                  customHeaders: >-
                      {
                        "Content-Type": "application/json",
                        "Authorization": "Bearer ${{ secrets.MASTODON_ACCESS_TOKEN }}"
                      }
                  data: >-
                      {
                        "status": "Released AdventOfCode [${{ steps.tag_name.outputs.tag }}](https://github.com/darac/adventofcode/releases/tag/${{ steps.tag_name.outputs.tag }})\n${{ steps.changelog.outputs.body }}\n#adventofcode #adventofcode2023",
                        "content_type": "markdown",
                        "language": "en"
                      }
