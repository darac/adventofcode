[build-system]
    build-backend = "poetry.core.masonry.api"
    requires      = ["poetry-core"]

[tool.black]
    line-length    = 99
    target-version = ["py310"]

[tool.coverage.html]
    directory = "htmlcov"

[tool.coverage.paths]
    source = ["*/site-packages", "aoc"]

[tool.coverage.report]
    exclude_lines = [
        "def __repr__",
        "if 0:",
        "if __name__ == __main__:",
        "if self.debug",
        "if settings.DEBUG:",
        "pragma: no cover",
        "raise AssertionError",
        "raise NotImplementedError",
    ]
    fail_under = 60
    show_missing = true

[tool.coverage.run]
    branch         = true
    omit           = ["aoc/__init__.py", "aoc/visualisations/*"]
    relative_files = true
    source         = ["aoc"]

[tool.flakeheaven]
    docstring-convention    = "google"
    extended_default_ignore = []
    format                  = "grouped"
    max_line_length         = 99
    show_source             = true

    [tool.flakeheaven.exceptions."tests/"]
        flake8-bandit = ["-S101"]

[tool.flakeheaven.plugins]
    "flake8-*"         = ["+*"]
    flake8-annotations = ["+*", "-ANN1??", "-ANN401"]
    flake8-docstrings  = ["+*", "-D212"]
    mccabe             = ["+*"]
    pycodestyle        = ["+*"]
    pyflakes           = ["+*"]
    pylint             = ["+F????", "+I????", "-C????", "-E????", "-R????", "-W????"]

[tool.isort]
    profile = "black"

[tool.mypy]
    files                  = ["aoc/"]
    ignore_missing_imports = true
    warn_return_any        = true
    warn_unused_configs    = true

[tool.poetry]
    authors = ["Paul Saunders <darac+github@darac.org.uk>"]
    classifiers = [
        "Programming Language :: Python :: 3",
        "Topic :: Games/Entertainment :: Puzzle Games",
    ]
    description = "darac's solutions for http://adventofcode.com"
    name = "aoc"
    readme = "README.md"
    version = "2022.10.1"

    [tool.poetry.dependencies]
        advent-of-code-data = ">=0.8.0"
        importlib-metadata  = { version = "^1.0", python = "<3.8" }
        kivy                = { extras = ["base"], version = "^2.1.0" }
        more-itertools      = "^9.0.0"
        numpy               = ">=1.21.4"
        pandas              = ">=1.3.4"
        parse               = "*"
        pygame              = "^2.1.2"
        python              = "^3.9"
        rich                = ">=10"

    [tool.poetry.group.dev.dependencies]
        black                 = "^22.10.0"
        bpython               = "^0.23"
        coverage              = { extras = ["toml"], version = "^6.5.0" }
        flake8                = ">=4.0.1,<5.0.0"
        flake8-annotations    = "^2.9.1"
        flake8-bandit         = "^3.0.0"
        flake8-blind-except   = "^0.2.1"
        flake8-broken-line    = "^0.6.0"
        flake8-bugbear        = "^23.2.13"
        flake8-builtins       = "^2.1.0"
        flake8-docstrings     = "^1.7.0"
        flake8-logging-format = "^0.9.0"
        flakeheaven           = "^3.2.1"
        isort                 = ">=5.0.0"
        mypy                  = "^0.991"
        pre-commit            = "^2.20.0"
        pytest                = "^7.2.0"
        pytest-cov            = "^4.0.0"
        pytest-gh-log-group   = "^0.2.0"
        toml-sort             = "^0.20.1"
        types-pyyaml          = "^6.0.12.2"

[tool.poetry.plugins."adventofcode.user"]
    darac_aoc = "aoc:solve"

[tool.pytest.ini_options]
    addopts          = "--cov --cov-report=term --cov-report=xml:coverage.xml --junitxml=junit.xml"
    junit_suite_name = "aoc"
