{
    // Place your adventofcode workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Advent Of Code Template": {
        "prefix": [
            "aoc"
        ],
        "body": [
            "# spell-checker: disable",
            "\"\"\"",
            "$0",
            "\"\"\"",
            "# spell-checker: enable",
            "",
            "import logging",
            "from typing import Literal",
            "",
            "logging.basicConfig(  # NOSONAR",
            "    level=\"DEBUG\",",
            "    format=\"%(message)s\",",
            "    datefmt=\"[%X]\",",
            ")",
            "LOG = logging.getLogger()",
            "",
            "",
            "def solve(",
            "    puzzle: str, part: Literal[\"a\", \"b\"], _runner: bool = False",
            ") -> int | None:",
            "   ...",
            ""
        ],
        "description": "A template for Advent Of Code solutions.",
        "isFileTemplate": true,
        "scope": "python"
    }
}
