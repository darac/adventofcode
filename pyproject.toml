[build-system]
    build-backend = "hatchling.build"
    requires      = ["hatchling"]


[project]
    authors = [{ name = "Paul Saunders", email = "darac+github@darac.org.uk" }]
    classifiers = [
        "Programming Language :: Python :: 3",
        "Topic :: Games/Entertainment :: Puzzle Games",
    ]
    dependencies = [
        "advent-of-code-data>=2.0.1",
        "certifi>=2024.8.30",
        "importlib-metadata>=8.2.0; python_version < \"3.8\"",
        "kivy[base]>=2.3.0",
        "numpy>=2.0.1",
        "pandas>=2.2.2",
        "parse>=1.20.2",
        "pillow>=10.4.0",
        "pygame>=2.6.0",
        "rich>=13.7.1",
    ]
    description = "darac's solutions for http://adventofcode.com"
    name = "aoc"
    readme = "README.md"
    requires-python = "<3.13,>=3.9"
    version = "2023.4.3"

    [project.entry-points."adventofcode.user"]
        darac_aoc = "aoc:solve"

[tool.black]
    line-length    = 76
    target-version = ["py311"]

[tool.coverage.html]
    directory = "htmlcov"

[tool.coverage.paths]
    source = ["*/site-packages", "aoc"]

[tool.coverage.report]
    exclude_lines = [
        "def __repr__",
        "if 0:",
        "if __name__ == __main__:",
        "if self.debug",
        "if settings.DEBUG:",
        "pragma: no cover",
        "raise AssertionError",
        "raise NotImplementedError",
    ]
    fail_under = 60
    show_missing = true

[tool.coverage.run]
    branch         = true
    omit           = ["aoc/__init__.py", "aoc/visualisations/*"]
    relative_files = true
    source         = ["aoc"]

[tool.mypy]
    files                  = ["aoc/"]
    ignore_missing_imports = true
    plugins                = "numpy.typing.mypy_plugin"
    warn_return_any        = true
    warn_unused_configs    = true

[tool.pip-tools]
    # Set generate-hashes for pip-compile
    generate-hashes = true

[tool.pytest.ini_options]
    addopts          = "--cov --cov-report=term --cov-report=xml:coverage.xml --junitxml=junit.xml"
    junit_suite_name = "aoc"

[tool.ruff]
    # The AOC website wraps at 76 chars, so should we.
    line-length = 76
    lint.ignore = [
        "C901",
        "COM812", # Allow ruff formatter
        "D",      # Skip Docstrings
        "FBT",    # Allow boolean parameters
        "ISC001", # Allow ruff formatter
        "N818",   # Don't want to have to call exceptions *Error
        "PLR",
        "S101",   # Of course we want to use assert
        "T201",   # Allow use of `print`
    ]
    lint.select = ["ALL"]
    target-version = "py312"

[tool.semantic_release]
    build_command           = "pip install uv && uv build"
    commit_message          = "{version}\n\nAutomatically generated by python-semantic-release"
    commit_parser           = "angular"
    logging_use_named_masks = false
    major_on_zero           = true
    no_git_verify           = false
    tag_format              = "v{version}"
    upload_to_pypi          = false
    upload_to_vcs_release   = true
    version_toml            = ["pyproject.toml:project.version"]
    version_variables       = ["aoc/__init__.py:__version__"]

    [tool.semantic_release.branches.main]
        match            = "(main|master)"
        prerelease       = false
        prerelease_token = "rc"

[tool.semantic_release.changelog]
    [tool.semantic_release.changelog.default_templates]
        changelog_file          = "CHANGELOG.md"
        exclude_commit_patterns = []
        template_dir            = "templates"

    [tool.semantic_release.changelog.environment]
        autoescape            = true
        block_end_string      = "%}"
        block_start_string    = "{%"
        comment_end_string    = "#}"
        comment_start_string  = "{#"
        extensions            = []
        keep_trailing_newline = false
        lstrip_blocks         = false
        newline_sequence      = "\n"
        trim_blocks           = false
        variable_end_string   = "}}"
        variable_start_string = "{{"

[tool.semantic_release.commit_author]
    default = "semantic-release <semantic-release>"
    env     = "GIT_COMMIT_AUTHOR"

[tool.semantic_release.commit_parser_options]
    allowed_tags = [
        "build",
        "chore",
        "ci",
        "docs",
        "feat",
        "fix",
        "perf",
        "refactor",
        "style",
        "test",
    ]
    default_bump_level = 0
    minor_tags = ["feat"]
    patch_tags = ["fix", "perf"]

[tool.semantic_release.publish]
    dist_glob_patterns    = ["dist/*"]
    upload_to_vcs_release = true

[tool.semantic_release.remote]
    ignore_token_for_push = false
    insecure              = false
    name                  = "origin"
    type                  = "github"

[tool.uv]
    dev-dependencies = [
        "bpython>=0.24",
        "coverage[toml]>=7.6.1",
        "deptry>=0.19.0",
        "mypy>=1.11.1",
        "pre-commit>=3.8.0",
        "pytest-cov>=5.0.0",
        "pytest-gh-log-group>=0.2.0",
        "pytest-randomly>=3.15.0",
        "pytest>=8.3.2",
        "python-semantic-release>=9.8.7",
        "ruff>=0.5.7",
        "toml-sort>=0.23.1",
        "types-pyyaml>=6.0.12.20240808",
        "uv>=0.5.4",
    ]
