---
name: Test
on:
    pull_request:
        types:
            - opened
            - synchronize
            - reopened
    push:
        branches:
            - main
        tags:
            - "*"
jobs:
    docker-image:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Build docker image
              run: docker build . -t adventofcode:test
            - env:
                  AOC_SESSION: ${{ secrets.AOC_SESSION }}
              name: Smoke test docker image
              run: |
                  docker run --rm -e AOC_SESSION adventofcode:test
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Install poetry
              run: pipx install poetry
            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  cache: poetry
                  python-version: "3.11"
            - name: Install dependencies with poetry
              run: poetry install
            - name: Get project version
              id: proj-version
              run: echo "PROJECT_VERSION=$(poetry version --short)" >> "$GITHUB_OUTPUT"
            - uses: chartboost/ruff-action@v1
            - run: poetry run pytest --cov --cov-report=xml:coverage.xml
                  --junit-xml=junit.xml
              env:
                  AOC_SESSION: ${{ secrets.AOC_SESSION }}
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  PROJECT_VERSION: ${{ steps.proj-version.outputs.PROJECT_VERSION }}
              with:
                  args: >
                      -Dsonar.projectVersion=$PROJECT_VERSION
            - name: Publish Test Report
              uses: pmeier/pytest-results-action@v0.4.0
              if: always()
              with:
                  path: "junit.xml"
